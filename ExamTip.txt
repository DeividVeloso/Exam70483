It’s important to know the different types that are available in C#. A value type should be
used for small, immutable objects that are used a lot. In all other situations, use a reference
type.


NOTE "FUNCTION" VERSUS "METHOD"
Sometimes the term "function" is used, and sometimes the term "method" is used. A function’s
meaning implies that it returns a value and doesn’t modify anything in the system.
You can say a function is the "read" part of the system. This is what is still used in functional
languages such as F#, in which immutable data structures are popular.
A method does enable data modification and doesn’t return any data. This is the "write"
part of the system.
You can see this distinction in the Func<T> and Action types that were added to the .NET
Framework. Func<T> always has a return type, whereas Action returns nothing.
In C#, this distinction is not used. The preferred term is "method."

Quando usar sealed em uma class ninguém vai poder herdar dela
Quando usar virtual em uma metode de classe, você está autorizando que a classe derivada sobreescreva o método(override)